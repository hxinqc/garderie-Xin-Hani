pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM',
                          branches: [[name: '*/main']],
                          doGenerateSubmoduleConfigurations: false,
                          extensions: [[$class: 'SparseCheckoutPaths', sparseCheckoutPaths:[[$class:'SparseCheckoutPath', path:'GarderieXinHani/*']]]],
                          submoduleCfg: [],
                          userRemoteConfigs: [[credentialsId: 'hxinqc', url: 'https://github.com/hxinqc/garderie-Xin-Hani.git']]])
            }
        }
        
        stage('Copy Properties') {
            steps {
                script {
                    def SOURCESDIR = "${WORKSPACE}/GarderieXinHani/src/main/resources/".replaceAll("\\\\", "/")
                    def TESTDIR = "${WORKSPACE}/GarderieXinHani/src/test/resources/".replaceAll("\\\\", "/")

                    bat "echo 'My variable is ${SOURCESDIR}'"
                    dir('C:/jenkins/production') {                    
                        bat 'copy application.properties "' + SOURCESDIR +'"'
                    }
                    dir('C:/jenkins/test') {                    
                        bat 'copy application.properties "' + TESTDIR + '"'
                    }
                }

            }
        }

        stage('Build') {
            steps {
                dir('GarderieXinHani') {
                    bat 'mvn clean package --settings=Jenkins/settings.xml'
                }
            }
        }
        
        stage('Test') {
            steps {
                dir('GarderieXinHani') {
                    bat 'mvn test --settings=Jenkins/settings.xml'
                }
            }
        }
        stage('Install') {
            steps {
                dir('GarderieXinHani') {
                    bat 'mvn clean install --settings=Jenkins/settings.xml'
                }
            }
        }
    }
}






